input {
  file {
    path => "/var/log/dionaea/dionaea-single.log"
    type => "dionaea"
  }
  file {
    path => "/var/log/glastopf-single.log"
    type => "glastopf"
  }
  file {
    path => "/var/log/conpot-single.log"
    type => "conpot"
  }
}

filter {
  if [type] == "dionaea" {
    mutate {
      add_field => [ "honeypot", "dionaea" ] 
      add_field => [ "basetype", "honeypot" ]
    }
    grok {
       match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time} : %{DATA:connection_type} \t %{DATA:connection_protocol}\t%{DATA:twee} %{DATA:protocol}\t %{IP:srcip} \t%{DATA:srcport} \t %{IP:dstip} \t %{DATA:dstport} \t %{DATA:hostname}" ]
    }
    mutate {
        strip => [ "connection_protocol", "connection_type", "protocol", "srcport" , "dstport" ]
    }
    mutate {
       add_field => { "timestamp" => "%{year}-%{month}-%{day} %{time}" }
    }
    date {
      match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss" ]
    }
  }

########################
  if [type] == "glastopf" {
    mutate {
      add_field => [ "honeypot", "glastopf" ]
      add_field => [ "basetype", "honeypot" ]
    }
    grok {
       match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time} : %{IP:srcip} \t%{DATA:srcport} \t %{IP:dstip} \t %{DATA:dstport} \t %{DATA:protocol} \t %{DATA:request_url} \t %{DATA:pattern} \t %{DATA:filename} \t %{DATA:request_method} \t '%{DATA:request_raw}' " ]
    }
    mutate {
        strip => [ "srcip", "dstip", "protocol", "srcport" , "dstport", "pattern", "filename", "request_url" ]
    }
    mutate {
       add_field => { "timestamp" => "%{year}-%{month}-%{day} %{time}" }
    }
    date {
      match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss" ]
    }
  }
########################
  if [type] == "conpot" {
    mutate {
      add_field => [ "honeypot", "conpot" ]
      add_field => [ "basetype", "honeypot" ]
    }
    grok {
       match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time} : %{IP:srcip} \t%{DATA:srcport} \t %{IP:dstip} \t %{DATA:request_protocol} \t %{DATA:response_code} \t %{DATA:sensor_id} \t '%{DATA:request_raw}' " ]
    }
    mutate {
        strip => [ "srcip", "dstip", "request_protocol", "srcport" , "response_code", "sensor_id" ]
    }
    mutate {
       add_field => { "timestamp" => "%{year}-%{month}-%{day} %{time}" }
    }
    date {
      match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss" ]
    }
  }
########################
  if [type] == "glastopf" or [type] == "dionaea" or [type] == "conpot" {
    geoip {
     source => "srcip"
     target => "geoip"
     database =>"/var/www/db/GeoLiteCity.dat"
     add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
     add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
    }
    mutate {
     convert => [ "[geoip][coordinates]", "float" ]
    }
    geoip {
     source => "srcip"
     target => "geoip"
     database =>"/var/www/db/GeoIPASNum.dat"
     add_field => [ "[geoip][full]", "%{[geoip][number]} %{[geoip][asn]}" ]
    }
  }
}

output {
  elasticsearch {
    host => localhost
  }
  stdout { codec => rubydebug }
}
